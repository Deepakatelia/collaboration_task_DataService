stages:
  - build
  - deploy

variables:
  NAME: collaboration-tasks-data-service

build-dev:
  stage: build
  variables:
    SERVICE_ACCOUNT: $DEV_GCP_DEPLOY_SERVICE_ACCOUNT
    PROJECT_ID: soundheart-dev-94cc1
  before_script:
    - echo $SERVICE_ACCOUNT | base64 --decode >> key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set project $PROJECT_ID
  script:
    - gcloud builds submit --tag gcr.io/$PROJECT_ID/$NAME:$CI_COMMIT_SHORT_SHA
  only:
    - main
  tags:
    - kubernetes

build-cvi:
  stage: build
  variables:
    SERVICE_ACCOUNT: $SOUNDHEART_QA_GCP_DEPLOY_SERVICE_ACCOUNT
    PROJECT_ID: soundheart-qa-4685e
  before_script:
    - echo $SERVICE_ACCOUNT | base64 --decode >> key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set project $PROJECT_ID
  script:
    - gcloud builds submit --tag gcr.io/$PROJECT_ID/$NAME:$CI_COMMIT_SHORT_SHA
  when: manual
  environment:
    name: cvi
  tags:
    - kubernetes


deploy-dev:
  stage: deploy
  variables:
    SERVICE_ACCOUNT: $DEV_GCP_DEPLOY_SERVICE_ACCOUNT
    PROJECT_ID: soundheart-dev-94cc1
    SECRET_YAML: $SERVICES_SECRET_DEV_YAML
  before_script:
    - echo $SERVICE_ACCOUNT | base64 --decode >> key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set project $PROJECT_ID
    - echo $SECRET_YAML | base64 --decode >> k8s/secret.yaml
    - gcloud container clusters get-credentials event-driven-cluster --zone us-central1-c --project $PROJECT_ID
  script:
    - kubectl apply -f k8s/secret.yaml
    - helm upgrade collaboration-tasks-data-helm k8s --install --set image.repository=gcr.io/$PROJECT_ID/$NAME --set image.tag=$CI_COMMIT_SHORT_SHA
    - kubectl describe deployment collaboration-tasks-data-helm
  needs:
    - build-dev
  only:
    - main
  tags:
    - kubernetes

deploy-cvi:
  stage: deploy
  variables:
    SERVICE_ACCOUNT: $SOUNDHEART_QA_GCP_DEPLOY_SERVICE_ACCOUNT
    PROJECT_ID: soundheart-qa-4685e
    SECRET_YAML: $SERVICES_SECRET_CVI_YAML
  before_script:
    - echo $SERVICE_ACCOUNT | base64 --decode >> key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set project $PROJECT_ID
    - echo $SECRET_YAML | base64 --decode >> k8s/secret.yaml
    - gcloud container clusters get-credentials cluster-1 --zone us-central1-c --project $PROJECT_ID
  script:
    - kubectl apply -f k8s/secret.yaml
    - helm upgrade collaboration-tasks-data-helm k8s --install --set image.repository=gcr.io/$PROJECT_ID/$NAME --set image.tag=$CI_COMMIT_SHORT_SHA
    - kubectl describe deployment collaboration-tasks-data-helm
  needs:
    - build-cvi
  tags:
    - kubernetes

build-ccc:
  stage: build
  variables:
    SERVICE_ACCOUNT: $CCC_DEPLOY_SERVICE_ACCOUNT
    PROJECT_ID: ccc-prod-393522
  before_script:
    - echo $SERVICE_ACCOUNT | base64 --decode >> key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set project $PROJECT_ID
  script:
    - gcloud builds submit --tag gcr.io/$PROJECT_ID/$NAME:$CI_COMMIT_SHORT_SHA
  when: manual
  environment:
    name: ccc
  tags:
    - kubernetes

deploy-ccc:
  stage: deploy
  variables:
    SERVICE_ACCOUNT: $CCC_DEPLOY_SERVICE_ACCOUNT
    PROJECT_ID: ccc-prod-393522
    SECRET_YAML: $SERVICES_SECRET_CCC_YAML
  before_script:
    - echo $SERVICE_ACCOUNT | base64 --decode >> key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set project $PROJECT_ID
    - echo $SECRET_YAML | base64 --decode >> k8s/secret.yaml
    - gcloud container clusters get-credentials event-driven-architecture --zone us-central1-c --project $PROJECT_ID
  script:
    - kubectl config set-context ccc --namespace=ccc --cluster=gke_ccc-prod-393522_us-central1-c_event-driven-architecture --user=gke_ccc-prod-393522_us-central1-c_event-driven-architecture
    - kubectl config use-context ccc
    - kubectl apply -f k8s/secret.yaml
    - helm upgrade $NAME k8s --install --set image.repository=gcr.io/$PROJECT_ID/$NAME --set image.tag=$CI_COMMIT_SHORT_SHA
    - kubectl describe deployment $NAME
  needs:
    - build-ccc
  tags:
    - kubernetes